plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'org.sonarqube' version '2.7'
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

group = 'net.zevrant-services.home.discovery'
sourceCompatibility = '1.8'

if(project.hasProperty('projVersion')) {
    project.version = project.projVersion
    ext.isSnapshot=false
} else {
    project.version = '0.0.1-snapshot'
}

repositories {
    mavenLocal()
    mavenCentral()
	maven {
		url "s3://zevrant-artifact-store"
		authentication {
            awsIm(AwsImAuthentication)
        }
	}
}

publishing {
    

    publications {
        myPublication(MavenPublication) {
            groupId 'net.zevrant-services'
            artifactId 'zevrant-discovery-service'

            from components.java
        }
    }
    repositories {
        maven {
            url "s3://zevrant-artifact-store/"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

ext {
    set('springBootAdminVersion', '2.1.3')
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'de.codecentric:spring-boot-admin-starter-server:2.1.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:2.1.3.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-netflix-sidecar:2.1.3.RELEASE'

//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.1.3.RELEASE'
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws-jdbc'
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
